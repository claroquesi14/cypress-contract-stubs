name: contract-stubs
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/node_modules/.cache

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2

      - name: Set yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Modules cache
        uses: actions/cache@v2
        id: modules-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
          yarn cypress install && yarn cypress verify

      - name: Build application
        run: |
          yarn build
        env:
          NODE_ENV: production

      - name: Save artifact
        uses: actions/upload-artifact@v2
        if: ${{ startsWith('refs/tags/v', github.ref) }}
        with:
          name: plugin-package
          path: dist

  tests:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-scripts: [ test, e2e ]
    env:
      NODE_ENV: production

    steps:
      - name: Checkout changes
        uses: actions/checkout@v2

      - name: Modules cache
        uses: actions/cache@v2
        id: modules-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - name: Run script ${{ matrix.node-scripts }}
        run: yarn ${{ matrix.node-scripts }}

      - name: Updload Coverage
        uses: codecov/codecov-action@v2
        if: ${{ matrix.node-scripts == 'test' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    if: ${{ startsWith('refs/tags/v', github.ref) }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: plugin-package

      - uses: actions/setup-node@v2
        with:
          node-version: 12.x
          registry-url: 'https://registry.npmjs.org'

      - name: Publish package
        run: |
          yarn publish --tag latest --access public --non-interactive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

